C51 COMPILER V9.54   IR                                                                    11/29/2024 19:05:56 PAGE 1   


C51 COMPILER V9.54, COMPILATION OF MODULE IR
OBJECT MODULE PLACED IN .\Objects\IR.obj
COMPILER INVOKED BY: D:\Keil5\C51\BIN\C51.EXE IR.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\IR.lst) 
                    -OBJECT(.\Objects\IR.obj)

line level    source

   1          #include <REGX52.H>
   2          #include "Timer0.h"
   3          #include "Int0.h"
   4          
   5          // 解码
   6          
   7          unsigned int IR_Time;         // 
   8          unsigned char IR_State;       //
   9          
  10          unsigned char IR_Data[4];     // 用4个元素的数组来存储32位
  11          unsigned char IR_pData;       // 记录当前存到第几位了
  12          
  13          unsigned char IR_DataFlag;    // 记录数据是否接收标志位
  14          unsigned char IR_RepeatFlag;  // 
  15          unsigned char IR_Address;     // 地址码
  16          unsigned char IR_Command;     // 命令码
  17          
  18          /**
  19            * @brief   红外初始化
  20            * @param   无
  21            * @retval  无
  22            */
  23          void IR_Init(void)
  24          {
  25   1              Timer0Init();
  26   1              Int0_Init();
  27   1      }
  28          
  29          unsigned char IR_GetDataFlag(void)
  30          {
  31   1              if(IR_DataFlag)      // 如果IR_DataFlag为1，则清零，返回1
  32   1              {
  33   2                      IR_DataFlag = 0;
  34   2                      return 1;
  35   2              }
  36   1              return 0;            // 如果IR_DataFlag为0，返回0
  37   1      }
  38          
  39          unsigned char IR_GetRepeatFlag(void)
  40          {
  41   1              if(IR_RepeatFlag)      // 如果IR_DataFlag为1，则清零，返回1
  42   1              {
  43   2                      IR_RepeatFlag = 0;
  44   2                      return 1;
  45   2              }
  46   1              return 0; 
  47   1      }
  48          
  49          unsigned char IR_GetAddress(void)
  50          {
  51   1              return IR_Address;
  52   1      }
  53          
  54          unsigned char IR_GetCommand(void)
C51 COMPILER V9.54   IR                                                                    11/29/2024 19:05:56 PAGE 2   

  55          {
  56   1              return IR_Command;
  57   1      }
  58          
  59          /**
  60            * @brief    
  61            * @param   
  62            * @retval   
  63            */
  64          void Int0_Routine(void) interrupt 0
  65          {
  66   1              if(IR_State == 0)
  67   1              {
  68   2                      Timer_SetCounter(0);
  69   2                      TIMER_Run(1);
  70   2                      IR_State = 1;
  71   2              }
  72   1              else if(IR_State == 1)    // 【起始信号】
  73   1              {
  74   2                      IR_Time = Timer_GetCounter();   //计数器 加一 为 一微秒(1us)
  75   2                      Timer_SetCounter(0);   //为了下一次计时
  76   2                      if(IR_Time > 12442-500 && IR_Time < 12442+500)
  77   2                      // 起始(start) 时间为 9000(低电平)+4500(高电平) = 13500 【12MHZ】
  78   2                      // 但是对于 本51单片机 用的是【11.0592MHz】 ，结果为【13500/1.085 = 12442】
  79   2                      // 有些误差，就上下500的范围。
  80   2                      {
  81   3                              IR_State = 2;
  82   3                      }
  83   2                      else if(IR_Time > 10368-500 && IR_Time < 10368+500) 
  84   2                      // 9000 + 2250 = 【11250】
  85   2                      // 对于 本51单片机 ， 结果为【11250/1.085 = 10368】
  86   2                      //【Repeat】
  87   2                      {
  88   3                              IR_RepeatFlag = 1;    //【说明这一帧 已经 结束了】【已经收到了】
  89   3                              TIMER_Run(0);         // 停止计时器
  90   3                              IR_State = 0;
  91   3                      }
  92   2                      else       // 其他情况，解码错误
  93   2                      {
  94   3                              IR_State = 1;    //转到 【本状态】【起始状态】
  95   3                      }
  96   2              }
  97   1              else if(IR_State == 2)      
  98   1                      //接收【遥控器红外地址，地址反码，键码，键码反码】
  99   1              {
 100   2                      IR_Time = Timer_GetCounter();   //计数器 加一 为 一微秒(1us)
 101   2                      Timer_SetCounter(0);   //为了下一次计时
 102   2                      if(IR_Time > 1032-500 && IR_Time < 1032+500)        // 存 0 位
 103   2                      {
 104   3                              IR_Data[IR_pData/8]&=~(0x01<<(IR_pData%8));      // 对应位置零
 105   3                              IR_pData++;
 106   3                      }
 107   2                      else if(IR_Time > 2073-500 && IR_Time < 2073+500)        // 存 1 位
 108   2                      {
 109   3                              IR_Data[IR_pData/8]|=(0x01<<(IR_pData%8));       // 对应位置一
 110   3                              IR_pData++;
 111   3                      }
 112   2                      else                 // 出错
 113   2                      {
 114   3                              IR_pData = 0;    // 清零
 115   3                              IR_State = 1;    // 变为初始状态
 116   3                      }
C51 COMPILER V9.54   IR                                                                    11/29/2024 19:05:56 PAGE 3   

 117   2                      if(IR_pData >= 32)   //收完32位数据
 118   2                      {
 119   3                              IR_pData = 0;    // 清零
 120   3                              if((IR_Data[0] == ~IR_Data[1]) && (IR_Data[2] == ~IR_Data[3]))
 121   3                              // 验证接收数据正确
 122   3                              {
 123   4                                      IR_Address = IR_Data[0];
 124   4                                      IR_Command = IR_Data[2];
 125   4                                      IR_DataFlag = 1;   // 代表数据已经过来了
 126   4                              }
 127   3                              TIMER_Run(0);  // 停止定时器
 128   3                              IR_State = 0;  // 切换为【空闲状态】
 129   3                      }
 130   2              }
 131   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    370    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     12    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
